workflows:
  android_production:
    name: 🚀 Android Production Build
    environment:
      vars:
        FLUTTER_VERSION: "3.19.5"
        FIREBASE_API_KEY: $FIREBASE_API_KEY
        FIREBASE_APP_ID: $FIREBASE_APP_ID
        FIREBASE_SERVICE_ACCOUNT_JSON: $FIREBASE_SERVICE_ACCOUNT_JSON
    scripts:
      - name: 🧹 تنظيف المشروع
        script: |
          flutter clean
          rm -rf android/app/src/main/java/io/flutter/
          rm -rf android/app/src/main/kotlin/

      - name: 🛠️ إعداد البيئة
        script: |
          flutter version $FLUTTER_VERSION
          flutter doctor -v
          flutter pub get
          npm install -g firebase-tools@latest --force

      - name: 🔄 إعادة إنشاء الهيكل
        script: |
          flutter create --platforms android --org com.yourcompany .

      - name: 🏗️ بناء APK
        script: |
          flutter clean
          flutter pub get
          flutter build apk --release \
            --dart-define=FIREBASE_API_KEY=$FIREBASE_API_KEY \
            --dart-define=FIREBASE_APP_ID=$FIREBASE_APP_ID \
            --verbose
          
          if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "❌ فشل البناء - لم يتم إنشاء APK"
            ls -la build/app/outputs/
            exit 1
          fi

      - name: 📤 نشر على Firebase
        script: |
          echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > /tmp/service-account.json
          firebase appdistribution:distribute \
            build/app/outputs/flutter-apk/app-release.apk \
            --app $FIREBASE_APP_ID \
            --service-account-json /tmp/service-account.json \
            --groups "testers" \
            --debug
    artifacts:
      - build/app/outputs/flutter-apk/*.apk
    publishing:
      email:
        recipients:
          - "your.email@example.com"
